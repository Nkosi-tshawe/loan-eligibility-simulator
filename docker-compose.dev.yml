services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   ports:
  #     - "6379:6379"

  backend-api:
    build:
      context: ./backend/LoanEligibilityAPI
      dockerfile: Dockerfile.dev
    depends_on:
      - postgres
    container_name: backend-api
      # - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ASPNETCORE_HTTP_PORTS=5203
      # - ASPNETCORE_HTTPS_PORTS=5003
      # - Redis__Configuration=redis:6379
    ports:
      - "5203:5203"
      # - "5003:5003"
    # volumes:
    #   - ~/.aspnet/https:/https:ro

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    develop:
      watch:
       - action: sync
         path: ./frontend
         target: /app
         ignore:
           - node_modules/
       - action: rebuild
         path: package.json

    depends_on:
      - backend-api

  # nginx:
  #     image: nginx:alpine
  #     ports:
  #       - "80:80"
  #     volumes:
  #       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  #     depends_on:
  #       - frontend
  #       - backend

volumes:
  pgdata:
  